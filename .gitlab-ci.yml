before_script:
  - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
  - export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
  - nvm install 19.6.0
  - nvm use 19.6.0


stages:
  - .pre
  - build
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}-dependencies
  paths:
    - .yarn/cache
    - node_modules/
    - apps/backend/node_modules/
    - apps/client/node_modules/
    - apps/frontend/node_modules/
    - packages/core/node_modules/
    - packages/eslint-config-custom/node_modules/
  policy: pull-push
  untracked: true


install_dependencies:
  stage: .pre
  script:
    - yarn install --frozen-lockfile
  cache:
    key: ${CI_COMMIT_REF_SLUG}-dependencies
    paths:
      - .yarn/cache
      - node_modules/
      - apps/backend/node_modules/
      - apps/client/node_modules/
      - apps/frontend/node_modules/
      - packages/core/node_modules/
      - packages/eslint-config-custom/node_modules/
    policy: pull-push
    untracked: true
  only:
    changes:
      - package.json
      - apps/backend/package.json
      - apps/client/package.json
      - apps/frontend/package.json
      - packages/core/package.json
      - packages/eslint-config-custom/package.json

build_core:
  stage: build
  only:
    - /^dev$/
    - /^staging$/
  script:
    # - mkdir ./BUILDS && mkdir ./BUILDS/core && mkdir ./BUILDS/core/dist
    - yarn workspace @TRPI/core build
  artifacts:
    paths:
      - ./BUILDS/core/dist

build_backend:
  stage: build
  only:
    - /^dev$/
    - /^staging$/
  needs: 
    - job: build_core
      artifacts: true
  script:
    # - mkdir ./BUILDS/backend && mkdir ./BUILDS/backend/dist
    - echo 'MYSQL_HOST=$MYSQL_HOST' | sudo tee -a ./apps/backend/.env
    - echo 'MYSQL_PORT=$MYSQL_PORT' | sudo tee -a ./apps/backend/.env
    - echo 'MYSQL_USER=$MYSQL_USER' | sudo tee -a ./apps/backend/.env
    - echo 'MYSQL_PASSWORD=$MYSQL_PASSWORD' | sudo tee -a ./apps/backend/.env
    - echo 'MYSQL_DATABASE=$MYSQL_DATABASE' | sudo tee -a ./apps/backend/.env
    - yarn workspace @TRPI/backend build
    - cp -r ./apps/backend/dist ./BUILDS/backend/dist
  artifacts:
    paths:
      - ./BUILDS/backend/dist

build_frontend:
  stage: build
  only:
    - /^dev$/
    - /^staging$/
  needs: ["build_core"]
  script:
    # - mkdir ./BUILDS/frontend && mkdir ./BUILDS/frontend/dist
    - yarn workspace @TRPI/frontend build
    - cp -r ./apps/frontend/dist ./BUILDS/frontend/dist
  artifacts:
    paths:
      - ./BUILDS/frontend/dist

deploy_backend:
  stage: deploy
  only:
    - staging
  needs: 
    - job: build_backend
      artifacts: true
  dependencies:
    - build_backend
  script:
    - ls -la
    - sudo -u ubuntu screen -S backend -X quit || true
    - sudo -u ubuntu screen -dmS backend

    - sudo -u ubuntu screen -S backend -X stuff "ls -la && cat .env && cd ./BUILDS/backend/dist/; node dist/main$(printf '\r')"

deploy_frontend:
  stage: deploy
  only:
    - staging
  needs: 
    - job: build_frontend
      artifacts: true
  dependencies:
    - build_frontend
  script:
    - ls -la
    - sudo -u ubuntu screen -S frontend -X quit || true
    - sudo -u ubuntu screen -dmS frontend
    - sudo -u ubuntu screen -S frontend -X stuff "cd ./BUILDS/frontend/dist/dist; npx serve -l 10000$(printf '\r')"
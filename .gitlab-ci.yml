
stages:
  - build
  - test

build_docker_image:
  stage: build
  image: docker:20.10
  services:
    - docker:20.10-dind
  script:
    - docker build -t my_monorepo_image .
    - docker save my_monorepo_image -o my_monorepo_image.tar
  artifacts:
    paths:
      - my_monorepo_image.tar

test_core:
  stage: test
  image: docker:20.10
  services:
    - docker:20.10-dind
  script:
    - docker load -i my_monorepo_image.tar
    - docker run my_monorepo_image bash -c "cd core && yarn test"


# ---
# stages:
#   - ssh-prepare

# ssh-prepare:
#   stage: ssh-prepare
#   script:
#     - echo 'ssh-connection'
#     - apt update
#     - apt upgrade -y
#     - mkdir -p ~/.ssh && chmod 700 ~/.ssh
#     - echo '' > ~/.ssh/config
#     - cp artifacts/config ~/.ssh/config
#     - echo $SSH_PRIVATE_KEY > ~/private.pem
#     - chmod 600 ~/private.pem
#     - apt -y install openssh-client
#     - apt install openfortivpn -y
#     - touch configF
#     - echo -e "host = vpn.unistra.fr\nport = 443\nusername = $USERNAME\npassword = $PASSWORD" > configF
#     - openfortivpn -c configF --trusted-cert 7b5a5f86c72f5a14f8bab07948149792ae260aa80415a532b5ee4dfeadd00733 &
#     - echo "WE CONNECT VPN"
#     - sleep 5
#     - ssh vmProjetIntegrateurgrp0-1
#     - ls




# deploy:
#   stage: deploy
#   script:
#     - echo 'deploy test'
#   only:
#     - master
# server:
#   stage: server
#   script:
#     - ssh vmProjetIntegrateurgrp0-1
#     - echo 'server build'
#   only:
#     changes:
#       - apps/backend/**/*
#   dependencies:
#     - ssh-prepare

# front:
#   stage: front
#   script:
#     - ssh vmProjetIntegrateurgrp0-1
#     - echo 'front build'
#   only:
#     changes:
#       - apps/frontend/**/*
#   dependencies:
#     - ssh-prepare
---
stages:
  - ssh-prepare
  - server
  - front
  - deploy

ssh-prepare:
  stage: ssh-prepare
  script:
    - echo 'ssh-connection'
    - apt update
    - apt upgrade -y
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo '' > ~/.ssh/config
    - cp artifacts/config ~/.ssh/config
    - cat ~/.ssh/config
    - echo $SSH_PRIVATE_KEY > ~/private.pem
    - chmod 600 ~/private.pem
    - apt-get install apt-transport-https ca-certificates curl software-properties-common
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - apt-get update
    - apt-get install docker-ce
    - docker version
    - docker run -it ubuntu /bin/bash





deploy:
  stage: deploy
  script:
    - echo 'deploy test'
  only:
    - master
server:
  stage: server
  script:
    - ssh vmProjetIntegrateurgrp0-1
    - echo 'server build'
  only:
    changes:
      - apps/backend/**/*
  dependencies:
    - ssh-prepare

front:
  stage: front
  script:
    - ssh vmProjetIntegrateurgrp0-1
    - echo 'front build'
  only:
    changes:
      - apps/frontend/**/*
  dependencies:
    - ssh-prepare